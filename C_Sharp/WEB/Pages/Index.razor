@page "/"

<PageTitle>Photo Upload</PageTitle>

<h1>Welcome to the Photo Library!</h1>

<InputFile OnChange="@OnInputFileChange" multiple />

@if (uploadedFiles.Any())
{
    <button @onclick="UploadFiles">Upload</button>
    <ul>
    @foreach (var file in uploadedFiles)
    {
        <li>@file.Name</li>
    }
    </ul>
}

@code {
    private List<IBrowserFile> uploadedFiles = new List<IBrowserFile>();
    private readonly HttpClient httpClient = new HttpClient(); // This should actually be injected
    @inject IConfiguration Configuration; // Inject the IConfiguration service

    private void OnInputFileChange(InputFileChangeEventArgs e)
    {
        uploadedFiles.AddRange(e.GetMultipleFiles());
    }

    private async Task UploadFiles()
    {
        var photoProcessUrl = Configuration["photo_process_url"]; // Read the Function URL from the configuration

        foreach (var file in uploadedFiles)
        {
            var content = new MultipartFormDataContent();
            var stream = file.OpenReadStream(10485760); // 10 MB limit here
            var fileContent = new StreamContent(stream);

            content.Add(fileContent, "\"file\"", $"\"{file.Name}\"");

            var response = await httpClient.PostAsync(photoProcessUrl, content); // Use the Function URL

            if (response.IsSuccessStatusCode)
            {
                // Handle the response accordingly.
            }
            else
            {
                // Error handling
            }

            // Make sure to dispose the stream after use
            await stream.DisposeAsync();
        }
    }
}


