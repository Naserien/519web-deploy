@page "/"

@inject IConfiguration Configuration
@inject HttpClient httpClient

<PageTitle>Photo Upload</PageTitle>

<h1>Welcome to the Photo Library!</h1>

<InputFile OnChange="@OnInputFileChange" multiple />

@if (uploadedFiles.Any())
{
    <button @onclick="UploadFiles">Upload</button>
    <ul>
    @foreach (var file in uploadedFiles)
    {
        <li>@file.Name</li>
    }
    </ul>
}

@code {
    private List<IBrowserFile> uploadedFiles = new List<IBrowserFile>();
    private string apiUrl;

    protected override void OnInitialized()
    {
        apiUrl = Configuration["photo_process_url"];
    }

    private void OnInputFileChange(InputFileChangeEventArgs e)
    {
        uploadedFiles.AddRange(e.GetMultipleFiles());
    }

    private async Task UploadFiles()
    {
        foreach (var file in uploadedFiles)
        {
            var content = new MultipartFormDataContent();
            using var stream = file.OpenReadStream(10485760); // 10 MB limit here
            using var fileContent = new StreamContent(stream);
            content.Add(fileContent, "file", file.Name);

            try
            {
                var response = await httpClient.PostAsync(apiUrl, content);

                if (response.IsSuccessStatusCode)
                {
                    // Handle the response accordingly, maybe indicating success to the user.
                }
                else
                {
                    // Error handling, maybe indicating the failure to the user.
                }
            }
            catch (HttpRequestException ex)
            {
                // Log and handle the network-related exception
            }
            finally
            {
                // The stream is already disposed by the 'using' statement
            }
        }

        uploadedFiles.Clear(); // Clear the list after processing all files
    }
}
